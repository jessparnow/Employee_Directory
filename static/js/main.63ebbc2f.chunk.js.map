{"version":3,"sources":["components/EmployeeTable/EmployeeTable.js","components/TableHeader/TableHeader.js","components/Banner/Banner.js","components/Button/Button.js","components/IdButton/IdButton.js","App.js","reportWebVitals.js","index.js"],"names":["EmployeeTable","props","employees","Object","keys","map","key","TableHeader","Banner","className","type","placeholder","aria-label","onClick","e","handleInputChange","Button","sortBy","IdButton","sortById","App","state","search","sortedEmployee","sort","a","b","name","setState","sortedEmployeeId","id","searchEmployees","this","handleFormSubmit","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sQAkBeA,MAhBf,SAAuBC,GACrB,IAAIC,EAAYD,EAAMC,UACtB,OACE,6BACGC,OAAOC,KAAKF,GAAWG,KAAI,SAACC,GAAD,OAC5B,6BAAKJ,EAAUI,WCYNC,MAjBf,SAAqBN,GAEnB,OACE,gCAKE,4CACA,0CACA,uCACA,2CCMSO,MAjBf,SAAgBP,GAEd,OACE,qBAAKQ,UAAU,+BAAf,SACF,sBAAKA,UAAU,kBAAf,UACE,sBAAMA,UAAU,uBAAhB,gCACA,uBAAMA,UAAU,SAAhB,UACE,uBAAOA,UAAU,oBAAoBC,KAAK,SAASC,YAAY,sBAAsBC,aAAW,WAChG,wBAAQH,UAAU,0BAA0BC,KAAK,SAASG,QAAS,SAACC,GAClEb,EAAMc,kBAAkBD,IAD1B,6BCESE,MAVf,SAAgBf,GAEd,OAEI,6BACE,wBAAQS,KAAK,SAASG,QAASZ,EAAMgB,OAArC,qBCGOC,MARf,SAAkBjB,GAEhB,OACI,6BACE,wBAAQS,KAAK,SAASG,QAASZ,EAAMkB,SAArC,mBC4FOC,E,4MAzFbC,MAAQ,CACNnB,UAAWA,EACXoB,OAAQ,I,EAGVL,OAAS,WACP,IAAIM,EAAiB,EAAKF,MAAMnB,UAAUsB,MAAK,SAACC,EAAGC,GAAJ,OAC7CD,EAAEE,KAAOD,EAAEC,KAAO,GAAK,KAGzB,EAAKC,SAAS,CAAEL,oB,EAElBJ,SAAW,WACT,IAAIU,EAAmB,EAAKR,MAAMnB,UAAUsB,MAAK,SAACC,EAAGC,GAAJ,OAC/CD,EAAEK,GAAKJ,EAAEI,GAAK,GAAK,KAGrB,EAAKF,SAAS,CAAEC,sB,4CAgClB,WAKE,OACE,gCACE,cAAC,EAAD,CACEE,gBAAiBC,KAAKD,gBACtBE,iBAAkBD,KAAKC,iBACvBlB,kBAAmBiB,KAAKjB,oBAG1B,wBAAON,UAAU,iCAAjB,UACE,kCACE,cAAC,EAAD,CAAUU,SAAUa,KAAKb,WACzB,cAAC,EAAD,CAAQF,OAAQe,KAAKf,SACrB,cAAC,EAAD,OAIF,gCACGe,KAAKX,MAAMnB,UAAUG,KAAI,SAACH,GAAD,OACxB,cAAC,EAAD,CACEA,UAAWA,mB,GA1ETgC,aCIHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,MCAdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.63ebbc2f.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction EmployeeTable(props) {\r\n  let employees = props.employees;\r\n  return (\r\n    <tr>\r\n      {Object.keys(employees).map((key) => (\r\n      <td>{employees[key]}</td>\r\n    ))}\r\n      {/* <td>{props.id}</td>\r\n      <td>{props.name}</td>\r\n      <td>{props.occupation}</td>\r\n      <td>{props.location}</td>\r\n      <td>{props.email}</td>\r\n      <td>{props.phone}</td> */}\r\n    </tr>\r\n  );\r\n}\r\nexport default EmployeeTable;\r\n","import React from \"react\";\r\n\r\nfunction TableHeader(props) {\r\n  // let employees = props.employees;\r\n  return (\r\n    <div>\r\n      {/* {Object.keys(employees).map(key => (\r\n            <th>{key}</th>\r\n        ))} */}\r\n      \r\n      <th>Occupation</th>\r\n      <th>Location</th>\r\n      <th>Email</th>\r\n      <th>Phone</th>\r\n    \r\n      </div>\r\n\r\n  );\r\n}\r\nexport default TableHeader;\r\n","import React from \"react\";\r\n\r\nfunction Banner(props) {\r\n  \r\n  return (\r\n    <nav className=\"navbar navbar-light bg-light\">\r\n  <div className=\"container-fluid\">\r\n    <span className=\"navbar-brand mb-0 h1\">Employee Directory</span>\r\n    <form className=\"d-flex\">\r\n      <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search by Name Only\" aria-label=\"Search\" />\r\n      <button className=\"btn btn-outline-success\" type=\"submit\" onClick={(e) => {\r\n        props.handleInputChange(e)\r\n      }}>Search</button>\r\n    </form>\r\n  </div>\r\n</nav>\r\n\r\n  );\r\n}\r\nexport default Banner;","import React from \"react\";\r\n\r\nfunction Button(props) {\r\n  // let employees = props.employees;\r\n  return (\r\n      \r\n      <th>\r\n        <button type=\"button\" onClick={props.sortBy}>Name</button>\r\n        </th>\r\n       \r\n  );\r\n}\r\nexport default Button;\r\n","import React from \"react\";\r\n\r\nfunction IdButton(props) {\r\n  // let employees = props.employees;\r\n  return (\r\n      <th>\r\n        <button type=\"button\" onClick={props.sortById}>Id</button>\r\n        </th>\r\n  );\r\n}\r\nexport default IdButton;\r\n","import \"./App.css\";\nimport React, { Component } from \"react\";\nimport employees from \"./employees.json\";\nimport EmployeeTable from \"./components/EmployeeTable/EmployeeTable\";\nimport TableHeader from \"./components/TableHeader/TableHeader\";\nimport Banner from \"./components/Banner/Banner\";\nimport Button from \"./components/Button/Button\";\nimport IdButton from \"./components/IdButton/IdButton\";\nclass App extends Component {\n  state = {\n    employees: employees,\n    search: \"\",\n  };\n\n  sortBy = () => {\n    let sortedEmployee = this.state.employees.sort((a, b) =>\n      a.name > b.name ? 1 : -1\n    );\n    //target the name to sort\n    this.setState({ sortedEmployee });\n  };\n  sortById = () => {\n    let sortedEmployeeId = this.state.employees.sort((a, b) =>\n      a.id > b.id ? 1 : -1\n    );\n    //target the name to sort\n    this.setState({ sortedEmployeeId });\n  };\n  //  handleChange = (e) => {\n  //    let search = this.state.employees.filter(employees.name);\n  // this.setState({search})\n  //  };\n  // componentDidMount() {\n  //   this.searchEmployees = () => {\n  //     fetch(employees)\n  //       .then((res) => res.json())\n  //       .then((employees) => this.setState({ employees }));\n  //   };\n  // }\n\n  // handleInputChange = (event) => {\n  //   this.setState({ search: event.target.value });\n  // };\n\n  // handleFormSubmit = (event) => {\n  //   event.preventDefault();\n  //   const value = event.target.value;\n  //   const name = event.target.name;\n  //   this.setState({\n  //     [name]: value,\n  //   });\n  // };\n  // onChangeHandler(e){\n  //   this.setState({\n  //     input: e.target.value,\n  //   })\n  // }\n\n  render() {\n    // const tBody = this.state.users\n    //     .filter(d => this.state.input === '' || d.includes(this.state.input))\n    //     .map((d, index) => <li key={index}>{d}</li>);\n\n    return (\n      <div>\n        <Banner\n          searchEmployees={this.searchEmployees}\n          handleFormSubmit={this.handleFormSubmit}\n          handleInputChange={this.handleInputChange}\n        />\n\n        <table className=\"table table-striped table-dark\">\n          <thead>\n            <IdButton sortById={this.sortById} />\n            <Button sortBy={this.sortBy} />\n            <TableHeader\n            // employees = {employeeData[0]}\n            />\n          </thead>\n          <tbody>\n            {this.state.employees.map((employees) => (\n              <EmployeeTable\n                employees={employees}\n                // id={employees.id}\n                // key={employees.id}\n                // name={employees.name}\n                // occupation={employees.occupation}\n                // location={employees.location}\n                // email={employees.email}\n                // phone={employees.phone}\n              />\n            ))}\n          </tbody>\n        </table>\n      </div>\n    );\n  }\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}